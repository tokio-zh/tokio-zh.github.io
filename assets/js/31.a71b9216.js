(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{167:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"futures"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#futures","aria-hidden":"true"}},[t._v("#")]),t._v(" Futures")]),t._v(" "),a("p",[t._v("在指南早期暗示的"),a("code",[t._v("future")]),t._v("是用于管理异步逻辑的构建块。 它们是Tokio使用的底层异步抽象。")]),t._v(" "),a("p",[a("code",[t._v("future")]),t._v("的实施由"),a("code",[t._v("future")]),t._v(" "),a("code",[t._v("crate")]),t._v("提供。 但是，为方便起见，Tokio重新导出了许多类型。")]),t._v(" "),a("h2",{attrs:{id:"futures是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#futures是什么","aria-hidden":"true"}},[t._v("#")]),t._v(" Futures是什么")]),t._v(" "),a("p",[t._v("future是表示异步计算完成的值。通常，由于系统中某处发生的事件使"),a("code",[t._v("future")]),t._v("完成。虽然我们从基本I / O的角度看待事物，但您可以使用"),a("code",[t._v("future")]),t._v("来表示各种事件，例如：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在线程池中执行的数据库查询。当数据库查询完成时，"),a("code",[t._v("future")]),t._v(" 完成，其值是查询的结果。")])]),t._v(" "),a("li",[a("p",[t._v("对服务器的RPC 调用。当服务器回复时，"),a("code",[t._v("future")]),t._v(" 完成，其值是服务器的响应。")])]),t._v(" "),a("li",[a("p",[t._v("超时事件。当时间到了，"),a("code",[t._v("future")]),t._v("就完成了，它的值是（）。")])]),t._v(" "),a("li",[a("p",[t._v("在线程池上运行的长时间运行的CPU密集型任务。任务完成后，"),a("code",[t._v("future")]),t._v(" 完成，其值为任务的返回值。")])]),t._v(" "),a("li",[a("p",[t._v("从套接字读取字节。当字节准备就绪时，"),a("code",[t._v("future")]),t._v("就完成了 - 根据缓冲策略，字节可能直接返回，或作为副作用写入某个现有缓冲区。")])])]),t._v(" "),a("p",[a("code",[t._v("future")]),t._v("抽象的整个要点是允许异步函数，即不能立即返回值的函数，将会返回一些东西。")]),t._v(" "),a("p",[t._v("例如，异步HTTP客户端可以提供如下所示的get函数：")]),t._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uri"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" ResponseFuture "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("然后，库的用户将使用该函数：")]),t._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" response_future "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://www.example.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("现在，response_future不是实际响应。这是个一旦收到响应，就会完成的"),a("code",[t._v("future")]),t._v("。 但是，调用者要具有一个具体的东西（"),a("code",[t._v("future")]),t._v("）使他们可以开始使用它。 例如，它们可以链式计算在接收到响应时执行，或者它们可能将"),a("code",[t._v("future")]),t._v("传递给函数。")]),t._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" response_is_ok "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" response_future\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token closure-params"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("status")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is_ok")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("track_response_success")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response_is_ok"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("所有与"),a("code",[t._v("future")]),t._v("一起采取的行动都不会立即执行任何工作。他们不能，因为他们没有实际的HTTP响应。相反，他们定义了响应"),a("code",[t._v("future")]),t._v("完成时要完成的工作。")]),t._v(" "),a("p",[a("code",[t._v("future")]),t._v(" "),a("code",[t._v("crate")]),t._v("和Tokio都有一系列组合功能，可以用来处理"),a("code",[t._v("future")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"实现future"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现future","aria-hidden":"true"}},[t._v("#")]),t._v(" 实现"),a("code",[t._v("future")])]),t._v(" "),a("p",[t._v("使用Tokio时，实现Future是很常见的，因此适应它是很重要的。")]),t._v(" "),a("p",[t._v("如前一节所述，Rust"),a("code",[t._v("future")]),t._v("是基于轮询的。这是Rust"),a("code",[t._v("future")]),t._v("库的一个独特方面。其他编程语言的大多数"),a("code",[t._v("future")]),t._v("库使用基于推送的模型，其中回调被提供给"),a("code",[t._v("future")]),t._v("，并且计算立即调用计算结果回调。")]),t._v(" "),a("p",[t._v("使用基于轮询的模型提供了许多优点，包括作为零成本抽象，即，与手动编写异步代码相比，使用Rust"),a("code",[t._v("future")]),t._v("没有额外的开销。")]),t._v(" "),a("p",[a("code",[t._v("future")]),t._v("的特点如下：")]),t._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" Future "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// The type of the value returned when the future completes.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// The type representing errors that occured while processing the")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// computation.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" Result"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Async"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("Item"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("Error"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("您可能会注意到这与用于实现异步任务的"),a("code",[t._v("trait")]),t._v("完全相同。 这是因为一旦计算完成，异步任务就是“正好”的"),a("code",[t._v("future")]),t._v("，其值为（）。")]),t._v(" "),a("p",[t._v("通常，当您实现Future时，您将定义一个由子（或内部）"),a("code",[t._v("future")]),t._v("组成的计算。 在这种情况下，"),a("code",[t._v("future")]),t._v("的实现会尝试调用内部"),a("code",[t._v("future")]),t._v("，如果内部"),a("code",[t._v("future")]),t._v("未准备好，则返回NotReady。")]),t._v(" "),a("p",[t._v("以下示例是由另一个返回"),a("code",[t._v("usize")]),t._v("并将使该值加倍的"),a("code",[t._v("future")]),t._v("组成的"),a("code",[t._v("future")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" Doubler"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    inner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" double"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" Doubler"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Doubler "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" inner "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("impl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Future "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" Doubler"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Future"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Item "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" usize"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Item "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" usize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Error "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("Error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" Result"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Async"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("usize"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("Error"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("inner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            Async"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Ready")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Ok")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Async"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Ready")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            Async"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("NotReady "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Ok")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Async"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("NotReady"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("当Doubler"),a("code",[t._v("future")]),t._v("被轮询时，它会调查其内在的"),a("code",[t._v("future")]),t._v("。 如果内部"),a("code",[t._v("future")]),t._v("尚未准备好，Doubler future将返回NotReady。 如果内心的"),a("code",[t._v("future")]),t._v("已经准备就绪，那么Doubler的"),a("code",[t._v("future")]),t._v("会使返回值加倍并返回Ready。")]),t._v(" "),a("p",[t._v("因为上面的匹配模式很常见，所以"),a("code",[t._v("future")]),t._v(" "),a("code",[t._v("crate")]),t._v("提供了一个宏：try_ready！。 它类似于"),a("code",[t._v("try！")]),t._v(" 或"),a("code",[t._v("？")]),t._v("，但它也返回NotReady。 上面的poll函数可以使用try_ready重写！ 如下：")]),t._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" Result"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Async"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("usize"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("Error"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" v "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("try_ready!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("inner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Ok")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Async"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Ready")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"返回notready"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回notready","aria-hidden":"true"}},[t._v("#")]),t._v(" 返回NotReady")]),t._v(" "),a("p",[t._v("当一个任务返回NotReady时，一旦它转换到就绪状态，执行者就会被通知。这使执行者能够有效地调度任务。")]),t._v(" "),a("p",[t._v("当函数返回Async :: NotReady时，在状态转换为“就绪”时通知执行程序至关重要。否则，任务将无限挂起，永远不会再次运行。")]),t._v(" "),a("p",[t._v("对于大多数"),a("code",[t._v("future")]),t._v("的实现，这是可传递的。当"),a("code",[t._v("future")]),t._v("实施是子"),a("code",[t._v("future")]),t._v("的组合时，当至少一个内部"),a("code",[t._v("future")]),t._v("返回NotReady时，外部"),a("code",[t._v("future")]),t._v("仅返回NotReady。因此，一旦内部"),a("code",[t._v("future")]),t._v("转变为就绪状态，外部"),a("code",[t._v("future")]),t._v("将转变为就绪状态。在这种情况下，NotReady合约已经满足，因为内部"),a("code",[t._v("future")]),t._v("将在准备就绪时通知执行者。")]),t._v(" "),a("p",[t._v("最内层的"),a("code",[t._v("future")]),t._v("，有时也被称为“资源”，是负责通知执行人的人。这是通过对"),a("code",[t._v("task :: current（）")]),t._v("返回的任务调用"),a("code",[t._v("notify")]),t._v("来完成的。")]),t._v(" "),a("p",[t._v("在执行者调用任务轮询之前，它将任务上下文设置为线程局部变量。然后，最内部的"),a("code",[t._v("future")]),t._v("从线程本地访问上下文，以便一旦其准备状态改变就能够通知任务。")]),t._v(" "),a("p",[t._v("我们将在后面的部分中更深入地探索实施资源和任务系统。"),a("strong",[t._v("除非你从内部的"),a("code",[t._v("future")]),t._v("获得NotReady，否则这里的关键是不要返回NotReady")])]),t._v(" "),a("h2",{attrs:{id:"一个更复杂的future"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一个更复杂的future","aria-hidden":"true"}},[t._v("#")]),t._v(" 一个更复杂的"),a("code",[t._v("future")])]),t._v(" "),a("p",[t._v("让我们看一下稍微复杂的"),a("code",[t._v("future")]),t._v("实现。 在这种情况下，我们将实现一个取得主机名，进行DNS解析，然后建立与远程主机的连接的"),a("code",[t._v("future")]),t._v("。 我们假设存在一个如下所示的resolve函数：")]),t._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" ResolveFuture"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("ResolveFuture")]),t._v("是一个返回"),a("code",[t._v("SocketAddr")]),t._v("的"),a("code",[t._v("future")]),t._v("。")]),t._v(" "),a("p",[t._v("实现"),a("code",[t._v("future")]),t._v("的步骤是：")]),t._v(" "),a("ol",[a("li",[t._v("调用"),a("code",[t._v("resolve")]),t._v("以获取"),a("code",[t._v("ResolveFuture")]),t._v("实例。")]),t._v(" "),a("li",[t._v("调用"),a("code",[t._v("ResolveFuture :: poll")]),t._v("直到它返回一个"),a("code",[t._v("SocketAddr")]),t._v("。")]),t._v(" "),a("li",[t._v("将"),a("code",[t._v("SocketAddr")]),t._v("传递给"),a("code",[t._v("TcpStream :: connect")]),t._v("。")]),t._v(" "),a("li",[t._v("调用"),a("code",[t._v("ConnectFuture :: poll")]),t._v("直到它返回"),a("code",[t._v("TcpStream")]),t._v("。")]),t._v(" "),a("li",[t._v("使用"),a("code",[t._v("TcpStream")]),t._v("完成外部"),a("code",[t._v("future")]),t._v("。")])]),t._v(" "),a("p",[t._v("我们将使用枚举来跟踪"),a("code",[t._v("future")]),t._v("的状态.")]),t._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" State "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Currently resolving the host name")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Resolving")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ResolveFuture"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Establishing a TCP connection to the remote host")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Connecting")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ConnectFuture"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("ResolveAndConnect")]),t._v("的"),a("code",[t._v("future")]),t._v("定义为：")]),t._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" ResolveAndConnect "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" State"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve_and_connect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" ResolveAndConnect "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" State"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Resolving")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ResolveAndConnect "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" state "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("impl")]),t._v(" Future "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" ResolveAndConnect "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Item "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TcpStream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Error "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("Error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" Result"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Async"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TcpStream"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("Error"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("State"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("loop")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" addr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Resolving")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ref")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" fut"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("try_ready!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fut"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Connecting")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ref")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" fut"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" fut"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" connecting "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TcpStream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Connecting")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("connecting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这解释了Future如何实现状态机。 这个"),a("code",[t._v("future")]),t._v("可以是两种状态中的任何一种：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("Resolving")])]),t._v(" "),a("li",[a("code",[t._v("Connecting")])])]),t._v(" "),a("p",[t._v("每次调用poll时，我们都会尝试将状态机推进到下一个状态。")]),t._v(" "),a("p",[t._v("现在，我们刚刚实现的"),a("code",[t._v("future")]),t._v("基本上是AndThen，所以我们可能只是使用该组合器而不是重新实现它。")]),t._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("and_then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("addr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" TcpStream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}],!1,null,null,null);s.default=e.exports}}]);
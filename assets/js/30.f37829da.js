(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{166:function(t,e,r){"use strict";r.r(e);var _=r(0),s=Object(_.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),r("p",[t._v("我们在"),r("code",[t._v("future")]),t._v("和"),r("code",[t._v("streams")]),t._v("概述中看到了一些最重要的组合。 在这里，我们将再看一些。 值得花一些时间使用特质文档来熟悉可用的全系列组合器（"),r("a",{attrs:{href:"https://tokio.rs/img/diagrams/cheatsheet-for-futures.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("cheatsheet"),r("OutboundLink")],1),t._v("）。")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://docs.rs/futures/0.1/futures/future/fn.ok.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ok"),r("OutboundLink")],1),t._v("，这类似于"),r("code",[t._v("Result :: Ok")]),t._v("：它将你给它的值视为一个立即成功的"),r("code",[t._v("future")]),t._v("。")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://docs.rs/futures/0.1/futures/future/fn.err.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("err"),r("OutboundLink")],1),t._v("，类似于"),r("code",[t._v("Result :: Err")]),t._v("：它将您提供的值视为立即失败的"),r("code",[t._v("future")]),t._v("。")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://docs.rs/futures/0.1/futures/future/fn.result.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("result"),r("OutboundLink")],1),t._v("，将结果提升到一个立即完整的"),r("code",[t._v("future")]),t._v("。")])]),t._v(" "),r("p",[t._v("对于流，有一些“立即就绪”的流：")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://docs.rs/futures/0.1/futures/stream/fn.iter.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("iter"),r("OutboundLink")],1),t._v("，它创建一个流，产生与底层迭代器相同的项。 迭代器生成Result值，第一个错误终止带有该错误的流。")]),t._v(" "),r("li",[t._v("once"),r("a",{attrs:{href:"https://docs.rs/futures/0.1/futures/stream/fn.once.html",target:"_blank",rel:"noopener noreferrer"}},[r("OutboundLink")],1),t._v("，从结果中创建单元素流。")])]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),r("p",[t._v("对于流，有一大组适配器，包括：")]),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),r("p",[t._v("最后，可以使用拆分适配器将既是流又是接收器的对象分解为单独的流和接收对象。")]),t._v(" "),r("p",[t._v("所有适配器都是零成本的，这意味着内部没有内存分配，并且实现将优化到您手动编写的内容。")]),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"基础组合器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础组合器","aria-hidden":"true"}},[this._v("#")]),this._v(" 基础组合器")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"一些具体的future和streams"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一些具体的future和streams","aria-hidden":"true"}},[this._v("#")]),this._v(" 一些具体的"),e("code",[this._v("future")]),this._v("和"),e("code",[this._v("streams")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("任何价值都可以变成一个立即完整的"),e("code",[this._v("future")]),this._v("。 "),e("code",[this._v("future")]),this._v("模块中有一些功能可用于创建这样的"),e("code",[this._v("future")]),this._v("：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("除了这些构造函数之外，还有一个函数，lazy，它允许您构建一个"),e("code",[this._v("future")]),this._v("，给出一个闭包，以便在以后按需生成该"),e("code",[this._v("future")]),this._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"intofuture"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#intofuture","aria-hidden":"true"}},[this._v("#")]),this._v(" IntoFuture")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("要了解的关键API是IntoFuture trait，它是可以转换为"),e("code",[this._v("future")]),this._v("的价值的 trait。 您认为采取"),e("code",[this._v("future")]),this._v("的大多数API实际上都适用于此 trait。 关键原因： trait是为Result实现的，允许您在预期"),e("code",[this._v("future")]),this._v("的许多地方返回结果值。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"适配器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#适配器","aria-hidden":"true"}},[this._v("#")]),this._v(" 适配器")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("与Iterator一样，Future，Stream和"),e("code",[this._v("Sink")]),this._v(" trait都配备了广泛的“适配器”方法。这些方法都使用接收对象并返回一个新的包装对象。对于"),e("code",[this._v("future")]),this._v("，您可以使用适配器：")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[t._v("更改"),r("code",[t._v("future")]),t._v("的类型（map，map_err）")]),t._v(" "),r("li",[t._v("一个完成后运行另一个"),r("code",[t._v("future")]),t._v("（then，and_then，or_else）")]),t._v(" "),r("li",[t._v("弄清楚两个"),r("code",[t._v("future")]),t._v("中的哪一个先解决（select）")]),t._v(" "),r("li",[t._v("等两个"),r("code",[t._v("future")]),t._v("都完成（join）")]),t._v(" "),r("li",[t._v("转换为"),r("code",[t._v("trait object")]),t._v("（Box :: new）")]),t._v(" "),r("li",[t._v("将展开转换为错误（catch_unwind）")])])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[t._v("许多与Iterator有共同点，如map，fold，collect，filter，zip，take，skip等。请注意"),r("code",[t._v("fold")]),t._v("和"),r("code",[t._v("collect")]),t._v("产生"),r("code",[t._v("future")]),t._v("，因此它们的结果是异步计算的。")]),t._v(" "),r("li",[t._v("用"),r("code",[t._v("future")]),t._v("排序的适配器（then，and_then，or_else）")]),t._v(" "),r("li",[t._v("用于组合流的附加适配器（merge, select）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("Sink")]),this._v(" trait目前具有较少的适配器")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"错误处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#错误处理","aria-hidden":"true"}},[this._v("#")]),this._v(" 错误处理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("future")]),this._v("，"),e("code",[this._v("streams")]),this._v("和"),e("code",[this._v("sinks")]),this._v("都将错误处理视为核心问题：它们都配备了相关的错误类型，并且各种适配器方法以合理的方式解释错误。例如：")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[r("p",[t._v("序列组合器: then，and_then，or_else，map和map_err所有链错误类似于标准库中的Result类型。因此，例如，如果您使用and_then链接"),r("code",[t._v("future")]),t._v("并且第一个"),r("code",[t._v("future")]),t._v("因错误而失败，那么链式"),r("code",[t._v("future")]),t._v("永远不会运行。")])]),t._v(" "),r("li",[r("p",[t._v("像select和join这样的组合也可以处理错误。对于select，以任何方式完成的第一个"),r("code",[t._v("future")]),t._v("会产生一个答案，传播错误，但如果你想继续使用它，还可以访问另一个"),r("code",[t._v("future")]),t._v("。对于join，如果任何将来产生错误，则整个连接会产生该错误。")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("默认情况下，"),e("code",[this._v("future")]),this._v("对恐慌没有任何特殊处理。但是，在大多数情况下，"),e("code",[this._v("future")]),this._v("最终作为线程池中的任务运行，您需要捕获它们产生的任何恐慌并将其传播到其他地方。 catch_unwind适配器可用于在不关闭工作线程的情况下将恐慌重新引入"),e("code",[this._v("Result")]),this._v("。")])}],!1,null,null,null);e.default=s.exports}}]);